import { BaseResponse } from "../base-response.type";
import { PlatformEnum } from "../knowledge/platform.type";

// Auto Generate Schedule Types
export interface AutoGenerateSchedule {
  id: string;
  isActive: boolean;
  day: number;
  time: string;
  platforms: PlatformEnum[];
  model: string;
  designStyle: string;
  ratio: string;
  referenceImages: string[];
  category: string;
  additionalPrompt: string | null;
  productKnowledgeId: string;
  rootBusinessId: string;
  advBusinessName: boolean;
  advBusinessCategory: boolean;
  advBusinessDescription: boolean;
  advBusinessLocation: boolean;
  advBusinessLogo: boolean;
  advBusinessUniqueSellingPoint: boolean;
  advBusinessWebsite: boolean;
  advBusinessVisionMission: boolean;
  advBusinessColorTone: boolean;
  advProductName: boolean;
  advProductCategory: boolean;
  advProductDescription: boolean;
  advProductPrice: boolean;
  advRoleHashtags: boolean;
  createdAt: string;
  updatedAt: string;
}

export interface AutoGenerateDaySchedule {
  day: number;
  schedules: AutoGenerateSchedule[];
}

export interface AutoGeneratePreference {
  isActive: boolean;
}

export interface AutoGenerateSettings {
  preference: AutoGeneratePreference;
  schedules: AutoGenerateDaySchedule[];
}

// API Response Types
export interface AutoGenerateSettingsResponse extends BaseResponse {
  data: AutoGenerateSettings;
}

export interface AutoGeneratePreferenceResponse extends BaseResponse {
  data: {
    isActive: boolean;
  };
}

export interface AutoGenerateScheduleResponse extends BaseResponse {
  data: AutoGenerateSchedule;
}

// Create/Update Schedule Request Types
export interface CreateAutoGenerateScheduleRequest {
  day: number;
  time: string;
  platforms: PlatformEnum[];
  model: string;
  designStyle: string;
  ratio: string;
  referenceImages: string[];
  category: string;
  additionalPrompt?: string;
  productKnowledgeId: string;
  isActive: boolean;
  advBusinessName: boolean;
  advBusinessCategory: boolean;
  advBusinessDescription: boolean;
  advBusinessLocation: boolean;
  advBusinessLogo: boolean;
  advBusinessUniqueSellingPoint: boolean;
  advBusinessWebsite: boolean;
  advBusinessVisionMission: boolean;
  advBusinessColorTone: boolean;
  advProductName: boolean;
  advProductCategory: boolean;
  advProductDescription: boolean;
  advProductPrice: boolean;
  advRoleHashtags: boolean;
}

export interface UpdateAutoGenerateScheduleRequest extends CreateAutoGenerateScheduleRequest {
  isActive: boolean;
}

// History Types
export interface ProductKnowledge {
  id: string;
  name: string;
  category: string;
  description: string;
  currency: string;
  price: number;
  images: string[];
  rootBusinessId: string;
  deletedAt: string | null;
  createdAt: string;
  updatedAt: string;
}

export interface PostedImageContent {
  id: string;
  platform: string;
  url: string;
  caption: string;
  images: string[];
  postId: string;
  generatedImageContentId: string;
  rootBusinessId: string;
  deletedAt: string | null;
  createdAt: string;
  updatedAt: string;
}

export interface GeneratedImageContent {
  id: string;
  images: string[];
  ratio: string;
  category: string;
  designStyle: string;
  caption: string;
  readyToPost: boolean;
  productKnowledgeId: string;
  rootBusinessId: string;
  deletedAt: string | null;
  createdAt: string;
  updatedAt: string;
  postedImageContents: PostedImageContent[];
}

export interface AutoGenerateHistory {
  id: string;
  rootBusinessId: string;
  schedulerAutoGeneratePostingId: string;
  status: string;
  code: string;
  message: string | null;
  generatedImageContentId: string;
  productKnowledgeId: string;
  createdAt: string;
  updatedAt: string;
  productKnowledge: ProductKnowledge;
  generatedImageContent: GeneratedImageContent;
}

export interface AutoGenerateHistoriesResponse extends BaseResponse {
  data: AutoGenerateHistory[];
  pagination: {
    total: number;
    page: number;
    limit: number;
    totalPages: number;
    hasNextPage: boolean;
    hasPrevPage: boolean;
  };
}

// Query Parameters
export interface AutoGenerateHistoriesQuery {
  sortBy?: string;
  limit?: number;
  page?: number;
  sort?: 'asc' | 'desc';
}
